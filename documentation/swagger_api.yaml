openapi: 3.0.0
info:
  title: Laravel CRUD API Documentation
  description: API for CRUD Laravel application
  version: 1.0.0
servers:
  - url: http://localhost:8000/api

paths:
  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /user/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/create:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created

  /companies:
    get:
      summary: Get all companies
      tags:
        - Companies
      responses:
        '200':
          description: A list of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'

  /company/{id}:
    get:
      summary: Get company by ID
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update company by ID
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Company updated
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete company by ID
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Company deleted
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company/create:
    post:
      summary: Create a new company
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          description: Company created

  /company/{id}/comments:
    get:
      summary: Get comments for company
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comments for the company
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /company/{id}/rating:
    get:
      summary: Get rating for company
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Company rating
          content:
            application/json:
              schema:
                type: integer
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /companies/top10:
    get:
      summary: Get top 10 companies
      tags:
        - Companies
      responses:
        '200':
          description: Top 10 companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'

  /comments:
    get:
      summary: Get all comments
      tags:
        - Comments
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /comment/{id}:
    get:
      summary: Get comment by ID
      tags:
        - Comments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update comment by ID
      tags:
        - Comments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comment updated
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete comment by ID
      tags:
        - Comments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Comment deleted
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /comment/create:
    post:
      summary: Create a new comment
      tags:
        - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment created

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
        avatar:
          type: string
          nullable: true
      required:
        - first_name
        - last_name
        - phone_number

    Company:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
      required:
        - name

    Comment:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        company_id:
          type: integer
        content:
          type: string
        rating:
          type: integer
      required:
        - user_id
        - company_id
        - content
        - rating

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "The requested resource was not found"
